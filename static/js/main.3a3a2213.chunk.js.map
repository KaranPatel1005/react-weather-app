{"version":3,"sources":["modules/CityComponents.js","modules/WeatherInfoComponents.js","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCiryLabel","span","SearchBox","form","CityComponent","props","updateCity","fetchWeather","src","onSubmit","placeholder","onChange","e","target","value","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherIcons","WeatherCondition","div","Condition","Location","WeatherInfoLabel","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponents","name","WeatheComponents","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a3a2213.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WeatherLogo = styled.img`\r\n    width: 140px;\r\n    height:140px;\r\n    margin: 40px auto;\r\n`;\r\n\r\nconst ChooseCiryLabel = styled.span`\r\n    color: black;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px auto;\r\n`;\r\n\r\nconst SearchBox = styled.form`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border: black solid 1px;\r\n    border-radius: 2px;\r\n    color: black;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 20px auto;\r\n    & input {\r\n        padding: 10px;\r\n        font-size: 14px;\r\n        border: none;\r\n        outline: none;\r\n        font-weight: bold;\r\n    }\r\n\r\n    & button {\r\n        padding: 10px;\r\n        font-size: 14px;\r\n        color: white;\r\n        background-color: black;\r\n        border: none;\r\n        outline: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst CityComponent = (props) => {\r\n    const { updateCity, fetchWeather } = props;\r\n    return (\r\n        <>\r\n            <WeatherLogo src=\"/react-weather-app/icon/perfect-day.svg\" />\r\n            <ChooseCiryLabel>Find Weather of your city</ChooseCiryLabel>\r\n            <SearchBox onSubmit={fetchWeather}>\r\n                <input\r\n                    placeholder=\"City\"\r\n                    onChange={(e) => updateCity(e.target.value)} />\r\n                <button\r\n                    type=\"submit\">\r\n                    Search\r\n                </button>\r\n            </SearchBox>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CityComponent;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const WeatherInfoIcons = {\r\n    sunset: \"/react-weather-app/icon/temp.svg\",\r\n    sunrise: \"/react-weather-app/icon/temp.svg\",\r\n    humidity: \"/react-weather-app/icon/humidity.svg\",\r\n    wind: \"/react-weather-app/icon/wind.svg\",\r\n    pressure: \"/react-weather-app/icon/pressure.svg\",\r\n};\r\n\r\nexport const WeatherIcons = {\r\n    \"01d\": \"/react-weather-app/icon/sunny.svg\",\r\n    \"01n\": \"/react-weather-app/icon/night.svg\",\r\n    \"02d\": \"/react-weather-app/icon/day.svg\",\r\n    \"02n\": \"/react-weather-app/icon/cloudy-night.svg\",\r\n    \"03d\": \"/react-weather-app/icon/cloudy.svg\",\r\n    \"03n\": \"/react-weather-app/icon/cloudy.svg\",\r\n    \"04d\": \"/react-weather-app/icon/perfect-day.svg\",\r\n    \"04n\": \"/react-weather-app/icon/cloudy-night.svg\",\r\n    \"09d\": \"/react-weather-app/icon/rain.svg\",\r\n    \"09n\": \"/react-weather-app/icon/rain-night.svg\",\r\n    \"10d\": \"/react-weather-app/icon/rain.svg\",\r\n    \"10n\": \"/react-weather-app/icon/rain-night.svg\",\r\n    \"11d\": \"/react-weather-app/icon/storm.svg\",\r\n    \"11n\": \"/react-weather-app/icon/storm.svg\",\r\n    \"50n\": \"/react-weather-app/icon/rain.svg\",\r\n};\r\n\r\nconst WeatherCondition = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    margin: 30px auto;\r\n`;\r\n\r\nconst Condition = styled.span`\r\n    margin: 20px auto;\r\n    font-size: 14px;\r\n\r\n    & span{\r\n        font-size: 28px;\r\n    }\r\n`;\r\n\r\nconst WeatherLogo = styled.img`\r\n    width: 100px;\r\n    height: 100px;\r\n    margin: 5px auto;\r\n`;\r\n\r\nconst Location = styled.span`\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n\r\n`;\r\n\r\nconst WeatherInfoLabel = styled.span`\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    margin: 20px 25px 10px;\r\n    text-align: start;\r\n    width: 90%;\r\n`;\r\n\r\nconst WeatherInfoContainer = styled.div`\r\n    display: flex;\r\n    width: 90%;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\n\r\nconst InfoContainer = styled.div`\r\n    display: flex;\r\n    margin: 5px 10px;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n`;\r\n\r\nconst InfoIcon = styled.img`\r\n    width: 36px;\r\n    height: 36px;\r\n`;\r\n\r\nconst InfoLabel = styled.span`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 14px;\r\n    margin: 15px;\r\n\r\n    & span {\r\n        font-size: 12px;\r\n        text-transform: capitalize;\r\n    }\r\n`;\r\n\r\n\r\nconst WeatherInfoComponents = (props) => {\r\n    const { name, value } = props;\r\n    return (\r\n        <InfoContainer>\r\n            <InfoIcon src={WeatherInfoIcons[name]} />\r\n            <InfoLabel>\r\n                {value}\r\n                <span>{name} </span>\r\n            </InfoLabel>\r\n        </InfoContainer>\r\n    );\r\n};\r\n\r\nconst WeatheComponents = (props) => {\r\n    const { weather } = props;\r\n    const isDay = weather?.weather[0].icon?.includes(\"d\");\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()} :${new Date(timeStamp * 1000).getMinutes()}`;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <WeatherCondition>\r\n                <Condition><span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>{`| ${weather?.weather[0].description}`}</Condition>\r\n                <WeatherLogo src={WeatherIcons[weather?.weather[0].icon]} />\r\n            </WeatherCondition>\r\n            <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n            <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n            <WeatherInfoContainer>\r\n                <WeatherInfoComponents\r\n                    name={isDay ? \"sunset\" : \"sunrise\"}\r\n                    value={getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])} />\r\n                <WeatherInfoComponents name=\"humidity\" value={weather?.main?.humidity} />\r\n                <WeatherInfoComponents name=\"wind\" value={weather?.wind?.speed} />\r\n                <WeatherInfoComponents name=\"pressure\" value={weather?.main?.pressure} />\r\n            </WeatherInfoContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatheComponents;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport CityComponent from './modules/CityComponents';\nimport WeatherComponents from './modules/WeatherInfoComponents';\n\nconst API_KEY = \"2ee4d26e057eb25102754947e9afd4d7\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  align-items: center;\n  box-shadow: 0 3px 6px 0 #555;\n  padding: 20px 10px;\n  border-radius: 4px;\n  width: 380px;\n  background: white;\n  font-family: 'Montserrat', sans-serif;\n`;\n\nconst AppLabel = styled.div`\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response =\n      await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>React Weather App</AppLabel>\n      {weather ? (\n        <WeatherComponents weather={weather} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}